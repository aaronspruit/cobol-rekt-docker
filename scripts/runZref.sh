# This script is used to run the Zref tool on a list of COBOL files.
# It uses the Java command to run the Zref tool with various options and parameters.

#!/bin/bash

set -e

export NEO4J_URI='neo4j://192.168.1.189:7687'
export NEO4J_DATABASE='neo4j'
export NEO4J_USERNAME='neo4j'
export NEO4J_PASSWORD=''

myArray=("ACINSTAL" "CPBLBTCH" "EXTADDR1" "MSTQUI01" "TCFR0001" "TOBL0001" "TOINBTCH" "TSFR0001"
"ACUI0001" "CPF1BTCH" "EXTCACCT" "MWBL0001" "TCUI0001" "TOBLBTCH" "TOUI0001" "TSINBTCH"
"AUDTRAIL" "CPF2BTCH" "EXTCUST1" "MWBLBTCH" "TLBL0001" "TOF1BTCH" "TRBL0001" "TSUI0001"
"BTCHCPNY" "CPF3BTCH" "EXTTRADE" "MWFR0001" "TLBLBTCH" "TOF2BTCH" "TRFR0001" "TUBL0001"
"BTCHCUST" "CPFR0001" "MFBL0001" "MWFRBTCH" "TLF1BTCH" "TOF3BTCH" "TRFR0002" "TUBLBTCH"
"BTCHDRVA" "CPFR0002" "MFFR0001" "MWINBTCH" "TLF2BTCH" "TOF4BTCH" "TRFR0003" "TUF1BTCH"
"BTCHDRVR" "CPFR0003" "MFQI0001" "MWUI0001" "TLF3BTCH" "TOF5BTCH" "TRFR0004" "TUF2BTCH"
"BVBL0001" "CPINBTCH" "MFUI0001" "SDBL0001" "TLF4BTCH" "TOF6BTCH" "TRFR0005" "TUF3BTCH"
"BVBLBTCH" "CPNYEXTK" "MRGCADDR" "SDBLBTCH" "TLFR0001" "TOFR0001" "TRFR0006" "TUFR0001"
"BVFR0001" "CPUI0001" "MRGCCACT" "SDFR0001" "TLFR0002" "TOFR0002" "TRQI0001" "TUFR0002"
"BVFRBTCH" "CUSTEXTK" "MRGCTRAD" "SDFRBTCH" "TLFR0003" "TOFR0003" "TRUI0001" "TUFR0003"
"BVINBTCH" "DMBL0001" "MRGREPT" " SDINBTCH" "TLFR0004" "TOFR0004" "TSBL0001" "TUINBTCH"
"BVUI0001" "DMFR0001" "MRGTRRPT" "SDUI0001" "TLINBTCH" "TOFR0005" "TSBLBTCH" "TUUI0001"
"CPBL0001" "DMUI0001" "MSTQQI01" "TCBL0001" "TLUI0001" "TOFR0006" "TSF1BTCH")

FAILED_FILES=()

for str in ${myArray[@]}
do
  if ! java -jar /app/cli.jar run $str \
    --commands="FLOW_TO_GRAPHML WRITE_FLOW_AST WRITE_CFG FLOW_TO_GRAPHML WRITE_FLOW_AST WRITE_CFG WRITE_DATA_STRUCTURES EXPORT_MERMAID FLOW_TO_NEO4J BUILD_PROGRAM_DEPENDENCIES" \
    --srcDir "/source" \
    --copyBooksDir "/copybooks" \
    --dialectJarPath "/app/dialect-idms.jar" \
    --dialect COBOL \
    --reportDir "/output" \
    --generation=PARAGRAPH
  then
    echo "Failed on $str"
    FAILED_FILES+=("$str")
  fi

  echo "Processed file: $str"
  read -p "Press ENTER to continue..."
done

if [ ${#FAILED_FILES[@]} -gt 0 ]; then
  echo "The following files failed:"
  printf '%s\n' "${FAILED_FILES[@]}"
fi
